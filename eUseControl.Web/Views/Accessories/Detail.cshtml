@model eUseControl.Web.Models.AccessoryDetailViewModel
@{
    ViewBag.Title = Model.Accessory.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .product-container {
        margin: 3rem auto;
    }
    
    .product-image {
        width: 100%;
        height: auto;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    .product-details {
        padding: 1rem 2rem;
    }
    
    .product-title {
        color: #1e3a8a;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 1rem;
    }
    
    .product-category {
        display: inline-block;
        background-color: #dbeafe;
        color: #1e40af;
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
        margin-bottom: 1rem;
    }
    
    .product-price {
        color: #0891b2;
        font-size: 1.8rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
    }
    
    .product-description {
        color: #475569;
        font-size: 1.1rem;
        line-height: 1.6;
        margin-bottom: 2rem;
    }
    
    .add-to-cart {
        background-color: #0ea5e9;
        color: white;
        border: none;
        padding: 0.8rem 2rem;
        border-radius: 4px;
        font-weight: 600;
        font-size: 1.1rem;
        transition: background-color 0.3s;
        display: inline-block;
    }
    
    .add-to-cart:hover {
        background-color: #0284c7;
        color: white;
    }
    
    .back-link {
        display: inline-block;
        margin-bottom: 1rem;
        color: #0ea5e9;
        text-decoration: none;
        font-weight: 500;
    }
    
    .back-link:hover {
        text-decoration: underline;
    }
    
    .related-section {
        margin-top: 4rem;
        padding-top: 2rem;
        border-top: 1px solid #e2e8f0;
    }
    
    .related-title {
        color: #1e3a8a;
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
    }
    
    .related-product {
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.3s, box-shadow 0.3s;
        margin-bottom: 1.5rem;
    }
    
    .related-product:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.05);
    }
    
    .related-img {
        height: 150px;
        width: 100%;
        object-fit: cover;
    }
    
    .related-details {
        padding: 1rem;
    }
    
    .related-name {
        font-weight: 600;
        font-size: 1rem;
        color: #1e3a8a;
        margin-bottom: 0.5rem;
    }
    
    .related-price {
        color: #0891b2;
        font-weight: 700;
        font-size: 1.1rem;
    }
    
    .view-btn {
        background-color: #0ea5e9;
        color: white;
        border: none;
        padding: 0.4rem 0.8rem;
        border-radius: 4px;
        font-weight: 500;
        font-size: 0.9rem;
        transition: background-color 0.2s;
        text-decoration: none;
        display: inline-block;
        margin-top: 0.5rem;
    }
    
    .view-btn:hover {
        background-color: #0284c7;
        color: white;
    }
</style>

<div class="container product-container">
    <a href="@Url.Action("Category", "Accessories", new { id = Model.Accessory.Category.ToLower() })" class="back-link">
        <i class="fas fa-arrow-left"></i> Back to @GetCategoryDisplayName(Model.Accessory.Category)
    </a>
    
    <div class="row">
        <div class="col-md-6">
            <img src="@Model.Accessory.ImagePath" alt="@Model.Accessory.Name" class="product-image">
        </div>
        <div class="col-md-6 product-details">
            <h1 class="product-title">@Model.Accessory.Name</h1>
            <span class="product-category">@GetCategoryDisplayName(Model.Accessory.Category)</span>
            <div class="product-price">$@Model.Accessory.Price.ToString("0.00")</div>
            <p class="product-description">
                @if (!string.IsNullOrEmpty(Model.Accessory.Description))
                {
                    @Model.Accessory.Description
                }
                else
                {
                    <text>
                    Premium quality eyewear accessory designed to enhance your visual experience.
                    Made with the highest quality materials for durability and performance.
                    </text>
                }
            </p>
            <a href="#" class="add-to-cart">Add to Cart</a>
        </div>
    </div>
    
    @if (Model.RelatedAccessories.Any())
    {
        <div class="related-section">
            <h2 class="related-title">You May Also Like</h2>
            <div class="row">
                @foreach (var related in Model.RelatedAccessories)
                {
                    <div class="col-md-3 col-sm-6">
                        <div class="related-product">
                            <img src="@related.ImagePath" alt="@related.Name" class="related-img">
                            <div class="related-details">
                                <h3 class="related-name">@related.Name</h3>
                                <p class="related-price">$@related.Price.ToString("0.00")</p>
                                <a href="@Url.Action("Detail", "Accessories", new { id = related.Id })" class="view-btn">View Details</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@functions {
    string GetCategoryDisplayName(string category)
    {
        switch (category.ToLower())
        {
            case "case": return "Eyewear Cases";
            case "spray": return "Cleaning Sprays";
            case "cloth": return "Cleaning Cloths";
            case "cord": return "Cords & Chains";
            default: return "Accessories";
        }
    }
}
